"""created database

Revision ID: 4350713b52f9
Revises: 
Create Date: 2019-11-25 20:25:24.578633

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4350713b52f9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Tags',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.String(length=20), nullable=False),
    sa.Column('path_file_marker', sa.String(length=100), nullable=False),
    sa.Column('file_name_marker', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('description'),
    sa.UniqueConstraint('file_name_marker'),
    sa.UniqueConstraint('path_file_marker')
    )
    op.create_table('Users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=30), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=130), nullable=False),
    sa.Column('about_me', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('password_hash', sa.String(length=200), nullable=False),
    sa.Column('avatar', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=13), nullable=True),
    sa.Column('last_access', sa.DateTime(), nullable=True),
    sa.Column('registration_date', sa.DateTime(), nullable=True),
    sa.Column('count_logins', sa.Integer(), nullable=True),
    sa.Column('count_logins_failed', sa.Integer(), nullable=True),
    sa.Column('date_last_login_failed', sa.DateTime(), nullable=True),
    sa.Column('genre', sa.String(length=10), nullable=False),
    sa.Column('date_birth', sa.DateTime(), nullable=False),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('date_last_change_pass', sa.DateTime(), nullable=False),
    sa.Column('device_ip_register', sa.String(length=15), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('Kindness',
    sa.Column('id_kindness', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=50), nullable=True),
    sa.Column('identifier', sa.String(length=40), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('post_date', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('unnamed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id_kindness'),
    sa.UniqueConstraint('identifier')
    )
    op.create_table('Tokens',
    sa.Column('id_token', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('token', sa.String(length=200), nullable=False),
    sa.Column('send_date', sa.DateTime(), nullable=False),
    sa.Column('was_used', sa.Boolean(), nullable=True),
    sa.Column('type_token', sa.String(length=15), nullable=False),
    sa.Column('is_valid', sa.Boolean(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_user'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id_token'),
    sa.UniqueConstraint('token')
    )
    op.create_table('Kindness_Files',
    sa.Column('id_kindness_file', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('size', sa.LargeBinary(), nullable=True),
    sa.Column('file_path', sa.String(length=70), nullable=False),
    sa.Column('date_upload', sa.DateTime(), nullable=False),
    sa.Column('id_kindness', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_kindness'], ['Kindness.id_kindness'], ),
    sa.PrimaryKeyConstraint('id_kindness_file')
    )
    op.create_table('Kindness_Tags',
    sa.Column('id_kindness', sa.Integer(), nullable=False),
    sa.Column('id_tag', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_kindness'], ['Kindness.id_kindness'], ),
    sa.ForeignKeyConstraint(['id_tag'], ['Tags.id'], ),
    sa.PrimaryKeyConstraint('id_kindness', 'id_tag')
    )
    op.create_table('Likes',
    sa.Column('id_like', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=True),
    sa.Column('id_kindness', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_kindness'], ['Kindness.id_kindness'], ),
    sa.ForeignKeyConstraint(['id_user'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id_like')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Likes')
    op.drop_table('Kindness_Tags')
    op.drop_table('Kindness_Files')
    op.drop_table('Tokens')
    op.drop_table('Kindness')
    op.drop_table('Users')
    op.drop_table('Tags')
    # ### end Alembic commands ###
